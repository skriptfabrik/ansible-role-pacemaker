---
name: Validate and test role
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Ansible Role
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Permissions for TMP
        run: sudo mkdir -p /tmp/ansible_tmp && sudo chmod 1777 /tmp/ansible_tmp
      - name: Run yamllint
        uses: frenck/action-yamllint@v1

      - name: Run ansible-lint
        uses: ansible-community/ansible-lint-action@v6.17.0

      - name: Set Permissions for TMP
        run: sudo chmod 1777 /tmp

      - name: Cache Ansible collections
        uses: actions/cache@v3
        with:
          path: ~/.ansible/collections
          key: ansible-collections-${{ runner.os }}
          restore-keys: ansible-collections-${{ runner.os }}

      - name: Install required Ansible collections
        run: ansible-galaxy collection install -r requirements.yml

  molecule:
    name: Run Molecule Tests
    defaults:
      run:
        working-directory: skriptfabrik.pacemaker
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - debian12
          - debian10
          - debian11
          - ubuntu2004
          - ubuntu2204
          - ubuntu2404
      fail-fast: false

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: skriptfabrik.pacemaker

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: pip-${{ runner.os }}

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get remove -y containerd containerd.io || true
          sudo apt-get install -y docker.io

      - name: Enable and start Docker service
        run: |
          sudo systemctl enable docker
          sudo systemctl start docker

      - name: Verify Docker installation
        run: docker --version || echo "Docker installation failed"

      - name: Debug Docker Setup
        run: |
          docker info || echo "Docker is not configured correctly"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "molecule-plugins[docker]" "molecule-plugins[lint]"
          pip install --upgrade ansible "molecule[docker]" docker
      - name: Verify Molecule plugins installation
        run: |
          molecule --version
          molecule lint --help || echo "Lint plugin is not installed correctly"
          pip install "molecule-plugins[lint]"
      - name: Ensure /tmp/ansible exists on GitHub runner
        run: |
          sudo mkdir -p /tmp/ansible
          sudo chmod 1777 /tmp/ansible
      - name: Export ANSIBLE_REMOTE_TEMP
        run: |
          echo "ANSIBLE_REMOTE_TEMP=/tmp/ansible" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "ANSIBLE_REMOTE_TEMP=${ANSIBLE_REMOTE_TEMP}"
          ansible-config dump

      - name: Set correct permissions for /tmp/ansible
        run: sudo chmod -R 777 /tmp/ansible

      - name: Run Molecule tests.
        run: pwd; ls -la; molecule test -- -vvv
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          MOLECULE_DISTRO: ${{ matrix.distro }}
          ANSIBLE_REMOTE_TEMP: /tmp/ansible
